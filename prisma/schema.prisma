// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Organization {
  id                 String              @id @default(uuid())
  name               String
  members            User[]
  towers             Tower[]
  searchlists        SearchList[]
  material           Json?
  weather            Json?
  todo               Json?
  towerLocations     String[]
  beachSections      Json?
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  groupregistrations GroupRegistration[]
  firstAidOperations FirstAidOperation[]
  invitations        Invitation[]
  revisions          Revision[]
  towerdays          TowerDay[]
  accomodations      Accomodation[]
  permissions        Permission[]
  bookings           Booking[]
}

model Invitation {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String

  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String
  permission     Permission   @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  permissionId   String

  @@unique([email, organizationId])
}

model Tower {
  id                 String              @id @default(uuid())
  main               Boolean             @default(false)
  name               String
  members            User[]
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  organization       Organization?       @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId     String?
  status             TowerStatus         @default(lifeguard_on_duty)
  type               TowerType           @default(tower)
  location           String
  number             String
  towerdays          TowerDay[]
  dutyplans          DutyPlan[]
  searchlists        SearchList[]
  groupregistrations GroupRegistration[]
  firstAidOperations FirstAidOperation[]
  revisions          Revision[]

  @@unique([number, location, organizationId])
  @@index(organizationId)
}

model TowerDay {
  id             String       @id @default(uuid())
  createdAt      DateTime
  updatedAt      DateTime     @updatedAt
  startedAt      DateTime?    @db.Time(4)
  status         Status       @default(open)
  guardLeaderId  String
  guardLeader    User         @relation(fields: [guardLeaderId], references: [id], onDelete: Cascade, name: "guardLeader")
  towerLeaderId  String
  towerLeader    User         @relation(fields: [towerLeaderId], references: [id], onDelete: Cascade, name: "towerLeader")
  watchman       Json?
  watchmanStatus Status       @default(open)
  todo           Json?
  todoStatus     Status       @default(open)
  incident       Json?
  incidentStatus Status       @default(open)
  weather        Json?
  weatherStatus  Status       @default(open)
  material       Json?
  materialStatus Status       @default(open)
  towerId        String
  tower          Tower        @relation(fields: [towerId], references: [id], onDelete: Cascade)
  dutyplan       DutyPlan?
  dutyplanStatus Status       @default(open)
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String

  @@unique([createdAt, towerId])
  @@index([towerId])
}

model DutyPlan {
  id         String    @id @default(uuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  date       DateTime
  towerDay   TowerDay? @relation(fields: [towerDayId], references: [id], onDelete: Cascade)
  towerDayId String?   @unique
  shifts     Shift[]
  tower      Tower?    @relation(fields: [towerId], references: [id], onDelete: Cascade)
  towerId    String?
}

model Shift {
  id         String    @id @default(uuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  type       ShiftType @default(duty)
  startTime  DateTime
  endTime    DateTime
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  dutyPlan   DutyPlan  @relation(fields: [dutyPlanId], references: [id], onDelete: Cascade)
  dutyPlanId String
}

enum ShiftType {
  duty
  prepared
}

model User {
  id                                    String              @id @unique
  gender                                String?
  firstName                             String
  lastName                              String
  salutation                            String?
  title                                 String?
  birthName                             String?
  birthDate                             DateTime?           @db.Date
  birthPlace                            String?
  street                                String?
  houseNumber                           String?
  zipCode                               String?
  location                              String?
  email                                 String              @unique
  phone                                 String?
  drkMember                             Boolean?            @default(false)
  drkEmployee                           Boolean?            @default(false)
  drkMemberLocation                     String?
  emergencyContactLastName              String?
  emergencyContactFirstName             String?
  emergencyContactPhone                 String?
  bankName                              String?
  iban                                  String?
  bic                                   String?
  differentBankholder                   String?
  lifeguardLicense                      String?
  lifeguardLicenseExpiration            DateTime?           @db.Date
  snorkelLicense                        String?
  snorkelLicenseExpiration              DateTime?           @db.Date
  lifeguardWaterRescueService           String?
  lifeguardWaterRescueServiceExpiration DateTime?           @db.Date
  waterRescuer                          String?
  waterRescuerExpiration                DateTime?           @db.Date
  riverRescuer                          String?
  riverRescuerExpiration                DateTime?           @db.Date
  medicalTraining                       String?
  medicalTrainingExpiration             DateTime?           @db.Date
  paramedicHelper                       String?
  paramedicHelperExpiration             DateTime?           @db.Date
  paramedic                             String?
  paramedicExpiration                   DateTime?           @db.Date
  paramedicAssistance                   String?
  paramedicAssistanceExpiration         DateTime?           @db.Date
  paramedicEmergency                    String?
  paramedicEmergencyExpiration          DateTime?           @db.Date
  physician                             String?
  physicianExpiration                   DateTime?           @db.Date
  physicianEmergency                    String?
  physicianEmergencyExpiration          DateTime?           @db.Date
  squadLeader                           String?
  squadLeaderExpiration                 DateTime?           @db.Date
  groupLeader                           String?
  groupLeaderExpiration                 DateTime?           @db.Date
  guardLeader                           String?
  guardLeaderExpiration                 DateTime?           @db.Date
  trainLeader                           String?
  trainLeaderExpiration                 DateTime?           @db.Date
  carDrivingLicense                     String?
  carDrivingLicenseExpiration           DateTime?           @db.Date
  blueLightInstruction                  String?
  blueLightInstructionExpiration        DateTime?           @db.Date
  boatmanLake                           String?
  boatmanLakeExpiration                 DateTime?           @db.Date
  boatmanInland                         String?
  boatmanInlandExpiration               DateTime?           @db.Date
  lifeboatOperator                      String?
  lifeboatOperatorExpiration            DateTime?           @db.Date
  rwcPilotStage                         String?
  rwcPilotStageExpiration               DateTime?           @db.Date
  srcCertificate                        String?
  srcCertificateExpiration              DateTime?           @db.Date
  bosCertificate                        String?
  bosCertificateExpiration              DateTime?           @db.Date
  droneClass                            String?
  droneClassExpiration                  DateTime?           @db.Date
  volunteerDataSheet                    String?
  volunteerDataSheetExpiration          DateTime?           @db.Date
  youthLeaderCard                       String?
  youthLeaderCardExpiration             DateTime?           @db.Date
  criminalRecord                        String?
  criminalRecordExpiration              DateTime?           @db.Date
  instructorSwimmer                     String?
  instructorSwimmerExpiration           DateTime?           @db.Date
  lifeguardInstructor                   String?
  lifeguardInstructorExpiration         DateTime?           @db.Date
  instructorWaterRescuer                String?
  instructorWaterRescuerExpiration      DateTime?           @db.Date
  instructorMedicalService              String?
  instructorMedicalServiceExpiration    DateTime?           @db.Date
  guardWalker                           String?
  guardWalkerExpiration                 DateTime?           @db.Date
  boat                                  String?
  boatExpiration                        DateTime?           @db.Date
  car                                   String?
  carExpiration                         DateTime?           @db.Date
  rwc                                   String?
  rwcExpiration                         DateTime?           @db.Date
  guardLeaderInstruction                String?
  guardLeaderInstructionExpiration      DateTime?           @db.Date
  createdAt                             DateTime            @default(now())
  updatedAt                             DateTime            @updatedAt
  organization                          Organization?       @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId                        String?
  towers                                Tower[]
  shifts                                Shift[]
  guardLeaders                          TowerDay[]          @relation(name: "guardLeader")
  towerLeaders                          TowerDay[]          @relation(name: "towerLeader")
  firstAidOperationsGuardLeaders        FirstAidOperation[] @relation(name: "firstAidOperationGuardLeader")
  firstAidOperationsHelpers             FirstAidOperation[] @relation(name: "firstAidOperationHelper")
  searchlists                           SearchList[]
  bookings                              Booking[]
  permissions                           Permission[]

  @@index([id, organizationId])
}

model SearchList {
  id                        String       @id @default(uuid())
  createdAt                 DateTime     @default(now())
  updatedAt                 DateTime     @updatedAt
  status                    Status       @default(open)
  date                      DateTime
  timeSearched              DateTime     @db.Time(4)
  firstName                 String
  lastName                  String
  age                       Int?
  stature                   String?
  height                    Int?
  clothing                  String?
  previousIllness           String?
  firstNameReportingPerson  String?
  lastNameReportingPerson   String?
  phoneReportingPerson      String?
  description               String?
  lastSeen                  DateTime?    @db.Time(4)
  lastLocation              String?
  informationPolice         String?
  informationFireDepartment String?
  informationBeachVogt      String?
  chainDiving               String?
  searchQuad                String?
  beachPatrol               String?
  searchByBoat              String?
  searchByDrone             String?
  searchRWC                 String?
  supportOtherBeachArea     String?
  timeFound                 DateTime?    @db.Time(4)
  handOverTo                String?
  signature                 Json?
  lifeguardId               String
  lifeguard                 User         @relation(fields: [lifeguardId], references: [id], onDelete: Cascade)
  tower                     Tower        @relation(fields: [towerId], references: [id], onDelete: Cascade)
  towerId                   String
  organization              Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId            String
}

model GroupRegistration {
  id                  String       @id @default(uuid())
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  date                DateTime
  time                DateTime     @db.Time(4)
  name                String
  count               Int
  supervisorFirstName String
  supervisorLastName  String
  tower               Tower        @relation(fields: [towerId], references: [id], onDelete: Cascade)
  towerId             String
  organization        Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId      String
}

model FirstAidOperation {
  id                           String                @id @default(uuid())
  createdAt                    DateTime              @default(now())
  updatedAt                    DateTime              @updatedAt
  status                       Status                @default(open)
  type                         FirstAidOperationType @default(small)
  date                         DateTime
  startTime                    DateTime              @db.Time(4)
  endTime                      DateTime?             @db.Time(4)
  accidentTime                 DateTime?             @db.Time(4)
  healthInsurance              String?
  firstName                    String?
  lastName                     String?
  address                      String?
  birthDate                    DateTime?
  cashRegisterNumber           String?
  insuranceNumber              String?
  operationNumberControlCenter String?
  operationNumberWRD           String?
  operationLocation            String?
  guardLeaderId                String
  guardLeader                  User                  @relation(fields: [guardLeaderId], references: [id], onDelete: Cascade, name: "firstAidOperationGuardLeader")
  helper                       User[]                @relation(name: "firstAidOperationHelper")
  signatureGuardLeader         Json?
  signatureFirstAider          Json?
  signatureSecondAider         Json?
  commissionedControlCenter    Boolean               @default(false)
  emergencyMedicalIntervention Boolean               @default(false)
  transportAmbulance           Boolean               @default(false)
  alertBathers                 Boolean               @default(false)
  alertPolice                  Boolean               @default(false)
  alertOwnObservation          Boolean               @default(false)
  alertLeader                  Boolean               @default(false)
  usedGuardLeader              Boolean               @default(false)
  usedLifeguard                Boolean               @default(false)
  usedRescueAssistant          Boolean               @default(false)
  usedGuardOperationManager    Boolean               @default(false)
  countForces                  Int                   @default(1)
  usedBoat                     Boolean               @default(false)
  usedQuad                     Boolean               @default(false)
  usedVehicle                  Boolean               @default(false)
  usedJetSki                   Boolean               @default(false)
  usedOtherResources           Json?
  usedFireDepartment           Boolean               @default(false)
  usedRescueService            Boolean               @default(false)
  usedAirRescue                Boolean               @default(false)
  usedNeighboringWRD           Boolean               @default(false)
  usedPolice                   Boolean               @default(false)
  usedDGzRS                    Boolean               @default(false)
  usedDiver                    Boolean               @default(false)
  usedOther                    Json?
  swimmingAccident             Boolean               @default(false)
  internalEmergency            Boolean               @default(false)
  surgicalEmergency            Boolean               @default(false)
  neurologicalEmergency        Boolean               @default(false)
  firstResponderOperation      Boolean               @default(false)
  otherAccident                Json?
  asthma                       Boolean               @default(false)
  aspiration                   Boolean               @default(false)
  hyperventilation             Boolean               @default(false)
  heartAttack                  Boolean               @default(false)
  rhythmDisorder               Boolean               @default(false)
  hypertensiveCrisis           Boolean               @default(false)
  shock                        Boolean               @default(false)
  bloodSugarImbalance          Boolean               @default(false)
  drownAlmostDrown             Boolean               @default(false)
  allergicReaction             Boolean               @default(false)
  hypothermia                  Boolean               @default(false)
  poisoning                    Boolean               @default(false)
  seizure                      Boolean               @default(false)
  acuteAbdomen                 Boolean               @default(false)
  otherIllness                 Json?
  emergencyEvent               String?
  injurySkullBrainFace         Boolean               @default(false)
  injurySpine                  Boolean               @default(false)
  injuryChest                  Boolean               @default(false)
  injuryAbdomen                Boolean               @default(false)
  injuryPelvis                 Boolean               @default(false)
  injuryExtremities            Boolean               @default(false)
  measurementsTaken            Boolean               @default(false)
  sysBloodPressure             Int?
  diaBloodPressure             Int?
  oxygenSaturation             Int?
  pulse                        Int?
  breahtingFrequency           Int?
  bloodSugar                   Int?
  temperature                  Int?
  skinColorRosy                Boolean               @default(false)
  skinColorPale                Boolean               @default(false)
  skinColorBlue                Boolean               @default(false)
  skinColorRed                 Boolean               @default(false)
  consciousnessOriented        Boolean               @default(false)
  consciousnessClouded         Boolean               @default(false)
  consciousnessUnconscious     Boolean               @default(false)
  breathingSpontaneouslyFreely Boolean               @default(false)
  breathingShortnessOfBreath   Boolean               @default(false)
  breathingRespiratoryArrest   Boolean               @default(false)
  circulationPulseRegularly    Boolean               @default(false)
  circulationPulseIrregularly  Boolean               @default(false)
  circulationCirculatoryArrest Boolean               @default(false)
  hurtSlightly                 Boolean               @default(false)
  hurtModerately               Boolean               @default(false)
  hurtSeverely                 Boolean               @default(false)
  circulationIVAccess          Boolean               @default(false)
  circulationMedication        Boolean               @default(false)
  circulationResuscitation     Boolean               @default(false)
  circulationAED               Boolean               @default(false)
  circulationDefibrillation    Boolean               @default(false)
  breathingProvideOxygen       Boolean               @default(false)
  breathingMedication          Boolean               @default(false)
  breathingSuction             Boolean               @default(false)
  breathingIntubation          Boolean               @default(false)
  breathingVentilation         Boolean               @default(false)
  positionHigh                 Boolean               @default(false)
  positionShock                Boolean               @default(false)
  positionStable               Boolean               @default(false)
  positionFlat                 Boolean               @default(false)
  positionVacuumMattress       Boolean               @default(false)
  woundCare                    Boolean               @default(false)
  sedation                     Boolean               @default(false)
  cervicalCollar               Boolean               @default(false)
  cooling                      Boolean               @default(false)
  heatPreservation             Boolean               @default(false)
  woundBandaged                Boolean               @default(false)
  splinterRemoved              Boolean               @default(false)
  tickPulled                   Boolean               @default(false)
  plasterGlued                 Boolean               @default(false)
  woundEducation               Boolean               @default(false)
  vaccinationStatus            Boolean               @default(false)
  rinseWoundWithWater          Boolean               @default(false)
  otherMeasure                 Json?
  resultConditionImproved      Boolean               @default(false)
  resultConditionUnchanged     Boolean               @default(false)
  resultConditionDeteriorated  Boolean               @default(false)
  resultDeathAtLocation        Boolean               @default(false)
  handOverRTW                  Boolean               @default(false)
  handOverNEF                  Boolean               @default(false)
  handOverKTW                  Boolean               @default(false)
  handOverRTH                  Boolean               @default(false)
  firstResponderFirstName      String?
  firstResponderLastName       String?
  firstResponderAddress        String?
  tower                        Tower                 @relation(fields: [towerId], references: [id], onDelete: Cascade)
  towerId                      String
  organization                 Organization          @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId               String
}

model Revision {
  id             String       @id @default(uuid())
  modelId        String       @unique
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  date           DateTime
  time           DateTime     @db.Time(4)
  url            String
  type           RevisionType
  tower          Tower        @relation(fields: [towerId], references: [id], onDelete: Cascade)
  towerId        String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String
}

model Accomodation {
  id             String       @id @default(uuid())
  number         Int
  name           String
  street         String?
  zipCode        String?
  location       String?
  availableBeds  Int
  reservable     Boolean      @default(true)
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  bookings       Booking[]

  @@unique([number, organizationId])
}

model Booking {
  id             String        @id @default(uuid())
  date           DateTime      @db.Date
  status         BookingStatus @default(open)
  accomodationId String
  userId         String
  organizationId String
  organization   Organization  @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  accomodation   Accomodation  @relation(fields: [accomodationId], references: [id], onDelete: Cascade)
  user           User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([date, accomodationId, userId])
}

model Permission {
  id                      String       @id @default(uuid())
  name                    String
  description             String?
  isAdmin                 Boolean      @default(false)
  createOrganization      Boolean      @default(false)
  readOrganization        Boolean      @default(false)
  updateOrganization      Boolean      @default(false)
  deleteOrganization      Boolean      @default(false)
  createInvitation        Boolean      @default(false)
  readInvitation          Boolean      @default(false)
  updateInvitation        Boolean      @default(false)
  deleteInvitation        Boolean      @default(false)
  createTower             Boolean      @default(false)
  readTower               Boolean      @default(false)
  updateTower             Boolean      @default(false)
  deleteTower             Boolean      @default(false)
  createTowerday          Boolean      @default(false)
  readTowerday            Boolean      @default(false)
  updateTowerday          Boolean      @default(false)
  deleteTowerday          Boolean      @default(false)
  completeTowerday        Boolean      @default(false)
  completeTowerdaySection Boolean      @default(false)
  resetTowerdaySection    Boolean      @default(false)
  createDutyplan          Boolean      @default(false)
  readDutyplan            Boolean      @default(false)
  updateDutyplan          Boolean      @default(false)
  deleteDutyplan          Boolean      @default(false)
  createUser              Boolean      @default(false)
  readUser                Boolean      @default(false)
  updateUser              Boolean      @default(false)
  deleteUser              Boolean      @default(false)
  createProtocol          Boolean      @default(false)
  readProtocol            Boolean      @default(false)
  updateProtocol          Boolean      @default(false)
  deleteProtocol          Boolean      @default(false)
  completeProtocol        Boolean      @default(false)
  createRevision          Boolean      @default(false)
  readRevision            Boolean      @default(false)
  updateRevision          Boolean      @default(false)
  deleteRevision          Boolean      @default(false)
  createAccomodation      Boolean      @default(false)
  readAccomodation        Boolean      @default(false)
  updateAccomodation      Boolean      @default(false)
  deleteAccomodation      Boolean      @default(false)
  createBooking           Boolean      @default(false)
  readBooking             Boolean      @default(false)
  updateBooking           Boolean      @default(false)
  deleteBooking           Boolean      @default(false)
  createPermission        Boolean      @default(false)
  readPermission          Boolean      @default(false)
  updatePermission        Boolean      @default(false)
  deletePermission        Boolean      @default(false)
  invitations             Invitation[]
  users                   User[]
  organization            Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId          String

  @@unique([name, organizationId])
}

enum RevisionType {
  towerday
  searchlist
  groupregistration
  firstaidoperation
}

enum FirstAidOperationType {
  small
  big
}

enum TowerStatus {
  lifeguard_on_duty
  use_caution_when_swimming
  beach_closed
}

enum TowerDayStatus {
  open
  ongoing
  completed
}

enum Status {
  open
  ongoing
  completed
  revision
  incomplete
}

enum BookingStatus {
  open
  confirmed
  request_canceled
  canceled
}

enum TowerDayFormStatus {
  open
  ongoing
  completed
  incomplete
}

enum TowerType {
  tower
  quad
}
