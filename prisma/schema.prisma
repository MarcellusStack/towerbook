// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id                 String              @id @default(uuid())
  name               String
  members            User[]
  towers             Tower[]
  searchlists        SearchList[]
  material           Json?
  weather            Json?
  todo               Json?
  towerLocations     String[]
  beachSections      Json?
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  groupregistrations GroupRegistration[]
  firstAidOperations FirstAidOperation[]
  invitations        Invitation[]
  revisions          Revision[]
  towerdays          TowerDay[]
  accomodations      Accomodation[]
}

model Invitation {
  id             String       @id @default(uuid())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  email          String
  role           Role
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String

  @@unique([email, organizationId])
}

model Tower {
  id                 String              @id @default(uuid())
  main               Boolean             @default(false)
  name               String
  members            User[]
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  organization       Organization?       @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId     String?
  status             TowerStatus         @default(lifeguard_on_duty)
  type               TowerType           @default(tower)
  location           String
  number             String
  towerdays          TowerDay[]
  dutyplans          DutyPlan[]
  searchlists        SearchList[]
  groupregistrations GroupRegistration[]
  firstAidOperations FirstAidOperation[]
  revisions          Revision[]

  @@index(organizationId)
}

model TowerDay {
  id             String       @id @default(uuid())
  createdAt      DateTime
  updatedAt      DateTime     @updatedAt
  startedAt      DateTime?    @db.Time(4)
  status         Status       @default(open)
  guardLeaderId  String
  guardLeader    User         @relation(fields: [guardLeaderId], references: [id], onDelete: Cascade, name: "guardLeader")
  towerLeaderId  String
  towerLeader    User         @relation(fields: [towerLeaderId], references: [id], onDelete: Cascade, name: "towerLeader")
  watchman       Json?
  watchmanStatus Status       @default(open)
  todo           Json?
  todoStatus     Status       @default(open)
  incident       Json?
  incidentStatus Status       @default(open)
  weather        Json?
  weatherStatus  Status       @default(open)
  material       Json?
  materialStatus Status       @default(open)
  towerId        String
  tower          Tower        @relation(fields: [towerId], references: [id], onDelete: Cascade)
  dutyplan       DutyPlan?
  dutyplanStatus Status       @default(open)
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String

  @@index([towerId])
}

model DutyPlan {
  id         String    @id @default(uuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  date       DateTime
  towerDay   TowerDay? @relation(fields: [towerDayId], references: [id], onDelete: Cascade)
  towerDayId String?   @unique
  shifts     Shift[]
  tower      Tower?    @relation(fields: [towerId], references: [id], onDelete: Cascade)
  towerId    String?
}

model Shift {
  id         String    @id @default(uuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  type       ShiftType @default(duty)
  startTime  DateTime
  endTime    DateTime
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  dutyPlan   DutyPlan  @relation(fields: [dutyPlanId], references: [id], onDelete: Cascade)
  dutyPlanId String
}

enum ShiftType {
  duty
  prepared
}

model User {
  id                          String              @id @unique
  gender                      String?
  firstName                   String
  lastName                    String
  salutation                  String?
  title                       String?
  birthName                   String?
  birthDate                   DateTime?           @db.Date
  birthPlace                  String?
  street                      String?
  houseNumber                 String?
  zipCode                     String?
  location                    String?
  email                       String              @unique
  phone                       String?
  drkMember                   Boolean?            @default(false)
  drkMemberLocation           String?
  emergencyContactLastName    String?
  emergencyContactFirstName   String?
  emergencyContactPhone       String?
  bankName                    String?
  iban                        String?
  bic                         String?
  differentBankholder         String?
  lifeguardLicense            String?
  snorkelLicense              String?
  lifeguardWaterRescueService String?
  waterRescuer                String?
  riverRescuer                String?
  medicalTraining             String?
  paramedicHelper             String?
  paramedic                   String?
  paramedicAssistance         String?
  paramedicEmergency          String?
  physician                   String?
  physicianEmergency          String?
  squadLeader                 String?
  groupLeader                 String?
  guardLeader                 String?
  trainLeader                 String?
  carDrivingLicense           String?
  blueLightInstruction        String?
  boatmanLake                 String?
  boatmanInland               String?
  lifeboatOperator            String?
  rwcPilotStage               String?
  srcCertificate              String?
  bosCertificate              String?
  droneClass                  String?
  volunteerDataSheet          String?
  youthLeaderCard             String?
  instructorSwimmer           String?
  lifeguardInstructor         String?
  instructorWaterRescuer      String?
  instructorMedicalService    String?
  guardWalker                 String?
  boat                        String?
  car                         String?
  rwc                         String?
  guardLeaderInstruction      String?
  role                        Role[]              @default([intern])
  createdAt                   DateTime            @default(now())
  updatedAt                   DateTime            @updatedAt
  organization                Organization?       @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId              String?
  towers                      Tower[]
  shifts                      Shift[]
  guardLeaders                TowerDay[]          @relation(name: "guardLeader")
  towerLeaders                TowerDay[]          @relation(name: "towerLeader")
  firstAidOperations          FirstAidOperation[]
  searchlists                 SearchList[]
  bookings                    Booking[]

  @@index([id, organizationId])
}

model SearchList {
  id                        String       @id @default(uuid())
  createdAt                 DateTime     @default(now())
  updatedAt                 DateTime     @updatedAt
  status                    Status       @default(open)
  date                      DateTime
  timeSearched              DateTime     @db.Time(4)
  firstName                 String
  lastName                  String
  age                       Int?
  stature                   String?
  height                    Int?
  clothing                  String?
  previousIllness           Boolean      @default(false)
  firstNameReportingPerson  String?
  lastNameReportingPerson   String?
  phoneReportingPerson      String?
  description               String?
  lastSeen                  DateTime?    @db.Time(4)
  lastLocation              String?
  informationPolice         String?
  informationFireDepartment String?
  informationBeachVogt      String?
  chainDiving               String?
  searchQuad                String?
  beachPatrol               String?
  searchByBoat              String?
  searchByDrone             String?
  searchRWC                 String?
  supportOtherBeachArea     String?
  timeFound                 DateTime?    @db.Time(4)
  handOverTo                String?
  lifeguardId               String
  lifeguard                 User         @relation(fields: [lifeguardId], references: [id], onDelete: Cascade)
  tower                     Tower        @relation(fields: [towerId], references: [id], onDelete: Cascade)
  towerId                   String
  organization              Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId            String
}

model GroupRegistration {
  id                  String       @id @default(uuid())
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  date                DateTime
  time                DateTime     @db.Time(4)
  name                String
  count               Int
  supervisorFirstName String
  supervisorLastName  String
  tower               Tower        @relation(fields: [towerId], references: [id], onDelete: Cascade)
  towerId             String
  organization        Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId      String
}

model FirstAidOperation {
  id                           String                @id @default(uuid())
  createdAt                    DateTime              @default(now())
  updatedAt                    DateTime              @updatedAt
  status                       Status                @default(open)
  type                         FirstAidOperationType @default(small)
  date                         DateTime
  startTime                    DateTime              @db.Time(4)
  endTime                      DateTime?             @db.Time(4)
  accidentTime                 DateTime?             @db.Time(4)
  healthInsurance              String?
  firstName                    String?
  lastName                     String?
  address                      String?
  birthDate                    DateTime?
  cashRegisterNumber           String?
  insuranceNumber              String?
  operationNumberControlCenter String?
  operationNumberWRD           String?
  operationLocation            String?
  guardLeaderId                String
  guardLeader                  User                  @relation(fields: [guardLeaderId], references: [id], onDelete: Cascade)
  helper                       Json?
  commissionedControlCenter    Boolean               @default(false)
  emergencyMedicalIntervention Boolean               @default(false)
  transportAmbulance           Boolean               @default(false)
  alertBathers                 Boolean               @default(false)
  alertPolice                  Boolean               @default(false)
  alertOwnObservation          Boolean               @default(false)
  alertLeader                  Boolean               @default(false)
  usedGuardLeader              Boolean               @default(false)
  usedLifeguard                Boolean               @default(false)
  usedRescueAssistant          Boolean               @default(false)
  usedGuardOperationManager    Boolean               @default(false)
  countForces                  Int                   @default(1)
  usedBoat                     Boolean               @default(false)
  usedQuad                     Boolean               @default(false)
  usedVehicle                  Boolean               @default(false)
  usedJetSki                   Boolean               @default(false)
  usedOtherResources           Json?
  usedFireDepartment           Boolean               @default(false)
  usedRescueService            Boolean               @default(false)
  usedAirRescue                Boolean               @default(false)
  usedNeighboringWRD           Boolean               @default(false)
  usedPolice                   Boolean               @default(false)
  usedDGzRS                    Boolean               @default(false)
  usedDiver                    Boolean               @default(false)
  usedOther                    Json?
  swimmingAccident             Boolean               @default(false)
  internalEmergency            Boolean               @default(false)
  surgicalEmergency            Boolean               @default(false)
  neurologicalEmergency        Boolean               @default(false)
  firstResponderOperation      Boolean               @default(false)
  otherAccident                Json?
  asthma                       Boolean               @default(false)
  aspiration                   Boolean               @default(false)
  hyperventilation             Boolean               @default(false)
  heartAttack                  Boolean               @default(false)
  rhythmDisorder               Boolean               @default(false)
  hypertensiveCrisis           Boolean               @default(false)
  shock                        Boolean               @default(false)
  bloodSugarImbalance          Boolean               @default(false)
  drownAlmostDrown             Boolean               @default(false)
  allergicReaction             Boolean               @default(false)
  hypothermia                  Boolean               @default(false)
  poisoning                    Boolean               @default(false)
  seizure                      Boolean               @default(false)
  acuteAbdomen                 Boolean               @default(false)
  otherIllness                 Json?
  emergencyEvent               String?
  injurySkullBrainFace         Boolean               @default(false)
  injurySpine                  Boolean               @default(false)
  injuryChest                  Boolean               @default(false)
  injuryAbdomen                Boolean               @default(false)
  injuryPelvis                 Boolean               @default(false)
  injuryExtremities            Boolean               @default(false)
  measurementsTaken            Boolean               @default(false)
  sysBloodPressure             Int?
  diaBloodPressure             Int?
  oxygenSaturation             Int?
  pulse                        Int?
  breahtingFrequency           Int?
  bloodSugar                   Int?
  temperature                  Int?
  skinColorRosy                Boolean               @default(false)
  skinColorPale                Boolean               @default(false)
  skinColorBlue                Boolean               @default(false)
  skinColorRed                 Boolean               @default(false)
  consciousnessOriented        Boolean               @default(false)
  consciousnessClouded         Boolean               @default(false)
  consciousnessUnconscious     Boolean               @default(false)
  breathingSpontaneouslyFreely Boolean               @default(false)
  breathingShortnessOfBreath   Boolean               @default(false)
  breathingRespiratoryArrest   Boolean               @default(false)
  circulationPulseRegularly    Boolean               @default(false)
  circulationPulseIrregularly  Boolean               @default(false)
  circulationCirculatoryArrest Boolean               @default(false)
  hurtSlightly                 Boolean               @default(false)
  hurtModerately               Boolean               @default(false)
  hurtSeverely                 Boolean               @default(false)
  circulationIVAccess          Boolean               @default(false)
  circulationMedication        Boolean               @default(false)
  circulationResuscitation     Boolean               @default(false)
  circulationAED               Boolean               @default(false)
  circulationDefibrillation    Boolean               @default(false)
  breathingProvideOxygen       Boolean               @default(false)
  breathingMedication          Boolean               @default(false)
  breathingSuction             Boolean               @default(false)
  breathingIntubation          Boolean               @default(false)
  breathingVentilation         Boolean               @default(false)
  positionHigh                 Boolean               @default(false)
  positionShock                Boolean               @default(false)
  positionStable               Boolean               @default(false)
  positionFlat                 Boolean               @default(false)
  positionVacuumMattress       Boolean               @default(false)
  woundCare                    Boolean               @default(false)
  sedation                     Boolean               @default(false)
  cervicalCollar               Boolean               @default(false)
  cooling                      Boolean               @default(false)
  heatPreservation             Boolean               @default(false)
  woundBandaged                Boolean               @default(false)
  splinterRemoved              Boolean               @default(false)
  tickPulled                   Boolean               @default(false)
  plasterGlued                 Boolean               @default(false)
  woundEducation               Boolean               @default(false)
  vaccinationStatus            Boolean               @default(false)
  rinseWoundWithWater          Boolean               @default(false)
  otherMeasure                 Json?
  resultConditionImproved      Boolean               @default(false)
  resultConditionUnchanged     Boolean               @default(false)
  resultConditionDeteriorated  Boolean               @default(false)
  resultDeathAtLocation        Boolean               @default(false)
  handOverRTW                  Boolean               @default(false)
  handOverNEF                  Boolean               @default(false)
  handOverKTW                  Boolean               @default(false)
  handOverRTH                  Boolean               @default(false)
  firstResponderFirstName      String?
  firstResponderLastName       String?
  firstResponderAddress        String?
  tower                        Tower                 @relation(fields: [towerId], references: [id], onDelete: Cascade)
  towerId                      String
  organization                 Organization          @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId               String
}

model Revision {
  id             String       @id @default(uuid())
  modelId        String       @unique
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  date           DateTime
  time           DateTime     @db.Time(4)
  url            String
  type           RevisionType
  tower          Tower        @relation(fields: [towerId], references: [id], onDelete: Cascade)
  towerId        String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String
}

model Accomodation {
  id             String       @id @default(uuid())
  number         Int
  name           String
  street         String?
  zipCode        String?
  location       String?
  availableBeds  Int
  reservable     Boolean      @default(true)
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  bookings       Booking[]

  @@unique(number)
}

model Booking {
  id             String       @id @default(uuid())
  date           DateTime     @db.Date
  accomodationId String
  userId         String
  accomodation   Accomodation @relation(fields: [accomodationId], references: [id], onDelete: Cascade)
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([date, accomodationId, userId])
}

enum RevisionType {
  towerday
  searchlist
  groupregistration
  firstaidoperation
}

enum FirstAidOperationType {
  small
  big
}

enum Role {
  admin
  full_time_security_guard
  volunteer_security_guard
  towerleader
  watchman
  intern
}

enum TowerStatus {
  lifeguard_on_duty
  use_caution_when_swimming
  beach_closed
}

enum TowerDayStatus {
  open
  ongoing
  completed
}

enum Status {
  open
  ongoing
  completed
  revision
  incomplete
}

enum TowerDayFormStatus {
  open
  ongoing
  completed
  incomplete
}

enum TowerType {
  tower
  quad
}
